import React from 'react';
import { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';
import { Row, Col } from 'antd';
import styles from './App.module.scss';
import Form from './components/forms/Form';

interface FormMenu {
  id: number;
  title: string;
  description: string;
  component: React.ReactNode;
};

const formsArray: Array<FormMenu> = [
  { id: 1, title: "Прилегающая территория и внешние фасады зданий", description: 'oiqwenoiqwefin qwefinoqwefn wqeifoqnwefiqowefnew', component: <Form title={'Прилегающая территория и внешние фасады зданий'} IQ={[
    {id: 1, title: 'Ворота 1, калитка 1, забор вдоль ЦТИ', options: ['Чисто', 'нет новых повреждений']},
    {id: 2, title: 'Ворота 2, забор до ВЦ', options: ['Чисто', 'нет новых повреждений']},
    {id: 3, title: 'ВЦ фасад и крыльцо', options: ['Чисто', 'нет новых повреждений, освещение работает']},
    {id: 4, title: 'Фасад Театральной мастерской', options: ['Чисто', 'нет новых повреждений,  освещение работает']},
    {id: 5, title: 'Ворота 3 и калитка 3 между ТМ и Особняком', options: ['Чисто', 'нет новых повреждений, освещение работает']},
    {id: 6, title: 'Фасад особняка, крыльцо особняка', options: ['Чисто', 'нет новых повреждений, освещение работает']},
    {id: 7, title: 'Ворота 4 и забор около особняка', options: ['Чисто', 'нет новых повреждений']},
    {id: 8, title: 'Ворота 5 и калитка 5, каменная ограда', options: ['Чисто', 'нет новых повреждений']},
    {id: 9, title: 'Музей Истории Русского Театра дверь, фасад', options: ['Чисто', 'нет новых повреждений, освещение работает']},
    {id: 10, title: 'Ворота 6 и калитка 6, каменная ограда', options: ['Чисто', 'нет новых повреждений, освещение работает']},
    {id: 11, title: 'Детский и Кукольный Театры фасад и окна, световые окна', options: ['Чисто', 'нет новых повреждений, освещение работает.']},
    {id: 12, title: 'Ворота 7 и калитка 7, каменная ограда и забор', options: ['Чисто', 'нет новых повреждений']},
    {id: 13, title: 'Тротуары вдоль территории Музея', options: ['Чисто', 'нет новых повреждений, проваливающихся элементов']},
]} /> },
  { id: 2, title: "Территория квартала", description: 'qweoinfqwief qweoifnqweofin qweoifnqweoinf', component: <Form title={'Территория квартала'} IQ={[
    {id: 1, title: 'Территория вокруг ЦТИ', options: ['Чисто', 'нет новых повреждений, фонари работают (уличные, ландшафтные)', 'скамейки без новых повреждений', 'плитка и резиновое покрытие без повреждений, закреплены', 'колодцы и решётки водостоков – на месте, закреплены', 'садовые насаждения (нет завявших, повреждённых, затоптанных)']},
    {id: 2, title: 'Фасад ЦТИ', options: ['Чисто', 'нет новых повреждений, освещение работает']},
    {id: 3, title: 'Крыльцо ЦТИ (крыльцо, пандус)', options: ['Чисто', 'плитка и решётки без повреждений, закреплены', 'пандус в порядке', 'перила в порядке, закреплены']},
  ]} /> },
  { id: 3, title: "ЦТИ", description: 'oqewinfioqwenf qwefoinqweifon qwefvre ', component: <Form title={'ЦТИ'} IQ={[
    {id: 1, title: 'Входная группа ЦТИ', options: ['Чисто', 'нет новых повреждений отделки', 'двери исправны, нет скрипа', 'оракалы на месте, без повреждений', 'освещение исправно, работает']},
    {id: 2, title: 'Холл ЦТИ', options: ['Чисто', 'ковры на месте, чистые, при наступании нет воды', 'нет новых повреждений отделки', 'мебель на месте, без повреждений', 'навигация на месте, без повреждений', 'информационные экраны работают', 'освещение исправно, работает']},
    {id: 3, title: 'Кассовый зал', options: ['Чисто', 'нет новых повреждений отделки', 'двери исправны, нет скрипа', 'оракалы на месте, без повреждений', 'мебель без повреждений', 'информационные экраны работают', 'билетоматы работают', 'освещение исправно, работает', 'оракалы целы', 'арт-объекты без повреждений', 'на стойке информации порядок']},
    {id: 4, title: 'Лифт и лифтовый холл (1 этаж)', options: ['нет новых повреждений отделки', 'лифт исправен', 'информационные таблички на месте, целы', 'освещение исправно, работает']},
    {id: 5, title: 'Лестница на -1 этаж', options: ['Чисто', 'нет новых повреждений отделки', 'освещение исправно, работает', 'тактильная плитка цела']},
    {id: 6, title: 'Холл и лифтовый холл -1 этаж', options: ['Чисто', 'нет новых повреждений, освещение работает', 'в пространстве порядок', 'мебель на месте, без повреждений', 'освещение исправно, работает', 'информационные таблички на месте, целы']},
    {id: 7, title: 'Гардероб', options: ['Чисто', 'нет новых повреждений отделки', 'на стойке и за стойкой порядок', 'автоматический гардероб исправен (проверяет гардеробщик)', 'автоматические камеры хранения исправны (проверяет гардеробщик)', 'освещение исправно, работает']},
    {id: 8, title: 'Туалеты -1 этаж', options: ['чисто (пол, стены, двери, зеркала, сантехника, раковины, унитазы, писсуары, ершики, оборудование)', 
      'нет новых повреждений отделки',
      'краны и слив работает',
      'двери исправны, нет скрипа',
      'туалетная бумага в наличии',
      'салфетки для рук в наличии',
      'мыло в наличии',
      'сушилка для рук работает',
      'освежители работают, нет неприятного запаха',
      'освещение исправно, работает',
    ]},
    {id: 9, title: 'Доступный туалет -1 этаж', options: ['Чисто',
       'нет новых повреждений отделки',
       'кран и слив работает',
       'дверь исправна, нет скрипа',
       'туалетная бумага в наличии',
       'салфетки для рук в наличии',
       'мыло в наличии',
       'сушилка для рук работает',
       'поручни работают',
       'освежитель работают, нет неприятного запаха',
       'освещение исправно, работает',
      ]},
    {id: 10, title: 'Хранение', options: [
      'Чисто',
      'нет новых повреждений отделки',
      'нет отпечатков и следов на стеклянной стене',
      'освещение исправно, работает',
      ]},
    {id: 11, title: 'Выставочный зал 1 этаж', options: ['Чисто', 
      'турникеты работают, нет скрипа',
      'нет новых повреждений отделки',
      'освещение исправно, работает',
      'нет постороннего шума',
    ]},
    {id: 12, title: 'Лестница на 2 этаж', options: ['Чисто', 
      'нет новых повреждений отделки',
      'арт-объекты без повреждений',
      'экраны работают',
      'освещение исправно, работает',
      'тактильная плитка цела',
    ]},
    {id: 13, title: 'Лестница на 3 этаж', options: ['Чисто', 
     'нет новых повреждений отделки', 
     'арт-объекты без повреждений', 
     'экраны работают', 
     'освещение исправно, работает', 
     'тактильная плитка цела'
    ]},
    {id: 14, title: 'Холл 2 этаж + лифтовый холл', options: ['Чисто',
       'Чисто',
       'нет новых повреждений отделки',
       'мебель на месте, без повреждений',
       'освещение исправно, работает',
      ]},
    {id: 15, title: 'Коворкинг', options: ['Чисто', 
      'нет новых повреждений отделки',
      'мебель на месте, без повреждений',
      'освещение исправно, работает',
      'козырёк за окном чистый'
    ]},
    {id: 16, title: 'Выставочный зал 2 этаж', options: ['Чисто', 
      'освещение исправно, работает', 
      'турникеты работают, нет скрипа', 
      'нет новых повреждений отделки', 
       'нет постороннего шума', 
    ]},
    {id: 17, title: 'Помещение магазина', options: ['Чисто', 
      'нет новых повреждений отделки',
      'в пространстве порядок',
      'освещение исправно, работает',
    ]},
    {id: 18, title: 'Кафе', options: ['Чисто',
       'нет новых повреждений отделки',
       'в пространстве порядок',
       'освещение исправно, работает',
      ]},
  ]} /> },
];



const Menu: React.FC = () => {
  const navigate = useNavigate();

  return (
    <Row gutter={[16, 16]} justify="center">
      {
        formsArray.map((el) => (
          <Col xs={24} sm={12} md={8} lg={6} xl={4} key={el.id}>
            <div
              className={styles.element}
              onClick={() => navigate(`/${el.id}`)}
            >
              <h1>{el.title}</h1>
              <div className={styles.description}>
                {el.description}
              </div>
              <button>{'Заполнить'}</button>
            </div>
          </Col>
        ))
      }
    </Row>
  );
};

const App: React.FC = () => {
  return (
    <Router>
      <Routes>
        <Route path="/" element={<Menu />} />
        {formsArray.map((el) => (
          <Route key={el.id} path={`/${el.id}`} element={el.component} />
        ))}
      </Routes>
    </Router>
  );
};



export default App;
